apply plugin: 'com.android.application'

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.zsyj.habitcheckin"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        manifestPlaceholders = [
                QQ_APPID : "1106910365"
        ]

        ndk {
            // 设置支持的SO库架构 for Bugly
            abiFilters 'armeabi', 'armeabi-v7a' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }



    signingConfigs {
        release {
            storeFile file('../HabitCheckinKey.jks')
            storePassword "habitcheckin"
            keyAlias "habitcheckin"
            keyPassword "habitcheckin"
        }

        debug {
            storeFile file('../HabitCheckinKey.jks')
            storePassword "habitcheckin"
            keyAlias "habitcheckin"
            keyPassword "habitcheckin"
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            //minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //签名
            signingConfig signingConfigs.debug

            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources false

            // 解决Android stdio IDE环境下debug代码不显示变量值
            testCoverageEnabled false

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //签名
            signingConfig signingConfigs.release

            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources false

            // 解决Android stdio IDE环境下debug代码不显示变量值
            testCoverageEnabled false
        }
    }


    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    repositories {
        flatDir { dirs 'libs' }
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:palette-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    testImplementation 'junit:junit:4.12'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //微信支付宝支付 微信QQ登录、分享
    implementation 'com.carozhu:ThirdLoginShare-annotation:1.1.0'
    implementation 'com.carozhu:ThirdLoginShareComponent:1.1.0'
    annotationProcessor 'com.carozhu:ThirdLoginShare-compiler:1.1.0'

//    implementation project(':ThirdLoginShare-annotation')
//    implementation project(':ThirdLoginShareComponent')
//    annotationProcessor project(':ThirdLoginShare-compiler')


}
